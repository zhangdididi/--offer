/*
题目描述:
输入两个单调递增的链表，输出两个链表合成后的链表，
当然我们需要合成后的链表满足单调不减规则。
*/

/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Solution {
    public ListNode Merge(ListNode list1,ListNode list2) {
        //创建傀儡节点，作为新的头结点
        ListNode newHead = new ListNode(0);
        ListNode newTail = newHead;
        ListNode curr1 = list1;
        ListNode curr2 = list2;
        while (curr1 != null && curr2 != null) {
            if (curr1.val <= curr2.val) {
                newTail.next = curr1;
                newTail = newTail.next;
                curr1 = curr1.next;
            } else {
                newTail.next = curr2;
                newTail = newTail.next;
                curr2 = curr2.next;
            }
        }
        //循环结束就会有一个排序链表被遍历完
        if (curr1 == null) {
            newTail.next = curr2;
        } 
        if (curr2 == null) {
            newTail.next = curr1;
        }
        return newHead.next;
    }
}
