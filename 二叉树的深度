/*
输入一棵二叉树，求该树的深度。
从根结点到叶结点依次经过的结点（含根、叶结点）形成树的一条路径，最长路径的长度为树的深度。
*/

/**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    
    public int max = 0;
    
    public void TreeDepthHelper(TreeNode root, int depth) {
        if (root == null) {
            if (max < depth) {
                max = depth;
            }
            return;
        }
        TreeDepthHelper(root.left, depth + 1);
        TreeDepthHelper(root.right, depth + 1);
    }
    
    public int TreeDepth(TreeNode root) {
        if (root == null) return 0;
        int depth = 0;
        TreeDepthHelper(root, depth);
        return max;
    }
}
