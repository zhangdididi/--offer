/*
输入两个链表，找出它们的第一个公共结点。
（注意因为传入数据是链表，所以错误测试数据的提示是用其他方式显示的，保证传入数据是正确的）
*/


/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Solution {
    public ListNode FindFirstCommonNode(ListNode head1, ListNode head2) {
        if (head1 == null || head2 == null) return null;
        //先确定两个链表的长度
        int length1 = getListLength(head1);
        int length2 = getListLength(head2);
        if (length1 > length2) {
            for (int i = 0; i < length1 - length2; i++) {
                head1 = head1.next;
            }
        } else {
            for (int i = 0; i < length2 - length1; i++) {
                head2 = head2.next;
            }
        }
        
        //同时向后走，边走边判定
        while (head1 != null && head2 != null) {
            if (head1 == head2) {
                return head1;
            }
            head1 = head1.next;
            head2 = head2.next;
        }
        return null;
    }
    
    public static int getListLength(ListNode head) {
        int length = 0;
        for (ListNode curr = head; curr != null; curr = curr.next) {
            length++;
        }
        return length;
    }
}
