/*
题目描述:
输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，另一个特殊指针指向任意一个节点），
返回结果为复制后复杂链表的head。
（注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）
*/


/*
public class RandomListNode {
    int label;
    RandomListNode next = null;
    RandomListNode random = null;

    RandomListNode(int label) {
        this.label = label;
    }
}
*/

import java.util.HashMap;
public class Solution {
    public RandomListNode Clone(RandomListNode pHead) {
        //创建哈希表来存储原链表结点和复制链表的结点
        HashMap<RandomListNode, RandomListNode> hash = new HashMap<>();
        //将原链表和复制相同值的链表的结点对应作为键值对
        for (RandomListNode cur = pHead; cur != null; cur = cur.next) {
            hash.put(cur, new RandomListNode(cur.label));
        }
        //遍历取出每一个复制链表的结点，给next和random结点赋值
        for (RandomListNode cur = pHead; cur != null; cur = cur.next) {
            hash.get(cur).next = hash.get(cur.next);
            hash.get(cur).random = hash.get(cur.random);
        }
        返回复制链表的头结点
        return hash.get(pHead);
    }
}
