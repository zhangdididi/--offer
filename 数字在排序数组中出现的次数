/*
统计一个数字在排序数组中出现的次数
*/

//遍历一次
public class Solution {
    public int GetNumberOfK(int [] array , int k) {
        int count = 0;
        for (int i = 0; i < array.length; i++) {
            if (array[i] == k) {
                count++;
            } else if (array[i] > k) {
                break;
            }
        }
        return count;
    }
}

//二分查找
public class Solution {
    public int GetNumberOfK(int [] array , int k) {
        int count = 0;
        int index1 = 0;
        int left = 0, right = array.length - 1;
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (array[mid] > k) {
                right = mid - 1;
            } else if (array[mid] < k) {
                left = mid + 1;
            } else {
                index1 = mid;
                break;
            }
        }
        int index2 = index1 - 1;
        while (index1 < array.length) {
            if (array[index1] != k) {
                break;
            }
            count++;
            index1++;
        }
        while (index2 >= 0) {
            if (array[index2] != k) {
                break;
            }
            count++;
            index2--;
        }
        return count;
    }
}
